#pragma checksum "C:\Users\mgdel\VSProjects\DevExtremeAsp\Views\Home\Index(copy).cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4df2ba6f0f5f57080a971ee1b77a0f66a7935da4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(DevExtremeAsp.Models.Home.Views_Home_Index_copy_), @"mvc.1.0.view", @"/Views/Home/Index(copy).cshtml")]
namespace DevExtremeAsp.Models.Home
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\mgdel\VSProjects\DevExtremeAsp\Views\_ViewImports.cshtml"
using DevExtremeAsp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\mgdel\VSProjects\DevExtremeAsp\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\mgdel\VSProjects\DevExtremeAsp\Views\Home\Index(copy).cshtml"
using DevExtremeAsp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4df2ba6f0f5f57080a971ee1b77a0f66a7935da4", @"/Views/Home/Index(copy).cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fba13cc84d023cb50ada38a28c0d881191c9b3fd", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index_copy_ : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<h2>Materiales</h2>\r\n\r\n\r\n");
#nullable restore
#line 12 "C:\Users\mgdel\VSProjects\DevExtremeAsp\Views\Home\Index(copy).cshtml"
Write(Html.DevExtreme().DataGrid<TMaterial>()
    .ID("gridContainer")
    .FilterPanel(f => f.Visible(true))
    .ShowBorders(true)
    .AllowColumnReordering(true)
    .Selection(s => s.AllowSelectAll(false))
    .Selection(s => s.Mode(SelectionMode.Multiple))
    .Paging(p => p.PageSize(7))
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .DataSource(d => d.Mvc().Controller("TMaterial").LoadAction("Get").Key("MatRefer"))
    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
    .OnExporting("exporting")
    .Columns(columns => {
        columns.AddFor(m => m.MatRefer);
        columns.AddFor(m => m.MatDescr);
        columns.AddFor(m => m.MatClass);
        columns.AddFor(m => m.MatStatus);
        columns.AddFor(m => m.MatStDate);
    })
    

    .OnSelectionChanged("selection_changed")
);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div id=""materialInfo"">
    <p class=""materialId""></p>
    <p class=""materialRe""></p>
    <p class=""materialDe""></p>
</div>
<div id=""exportInfo"">
    <p class=""exportText""></p>
</div>
<script>
    function selection_changed(selectedItems) {
    }
    function _selection_changed(selectedItems) {
        var data = selectedItems.selectedRowsData[0];
        if(data) {
            $("".materialId"").text(""Datos del material seleccionado"");
            $("".materialRe"").text(data.MatRefer);
            $("".materialDe"").text(data.MatDescr);
        }
    }
</script>

<script>
    function exporting(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('Materials');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new");
            WriteLiteral(" Blob([buffer], { type: \'application/octet-stream\' }), \'Materials.xlsx\');\r\n            });\r\n        });\r\n        e.cancel = true;\r\n        $(\".exportText\").text(\"Ha intentado la exportacion\");\r\n\r\n    }\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
